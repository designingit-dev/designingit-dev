// -----------------------------------------------------------------------------
/*doc
---
title: Menu Button
name: menu-button
category: Components - Menu Button
---

Default state. (`.js--site` should be present on the site's body or wrapper, it's included here for demonstration purposes only.)

``` html_example
<div class="js--site">
  <a href="#" class="menuButton" @click="openMenu(object, $event)"><span class="menuButton__icon" v-bind:class="{ 'is--active': menuOpen }"></span></a>
</div>
```
*/
// -----------------------------------------------------------------------------

.menuButton {
  $color: $grey--light;
  $width: 32px;
  $line-thickness: 2.5px;
  $line-spacing: 11px;
  $border-radius: 5px;

  line-height: 0;
  display: inline-block;
  width: pem($width);
  height: pem(($line-spacing * 2) + ($line-thickness * 2));
  border-radius: pem($border-radius);

  &__icon {
    position: relative;
    display: inline-block;
    overflow: visible;
    width: pem($width);
    border-radius: pem($border-radius);
    height: pem($line-thickness);
    margin: pem($line-spacing) 0 0 0; // Margin to account for the transform
    transition-timing-function: $ease-in-out;
    transition-duration: $duration;
    transition-property: background-color, transform;
    background: $color;

    &.is--active {
      background-color: transparentize($color, 1);
    }

    &::before,
    &::after {
      position: relative;
      display: block;
      width: pem($width);
      height: pem($line-thickness);
      border-radius: pem($border-radius);
      content: "";
      transition: $duration transform $ease-in-out;
      background: $color;
    }

    &::before {
      top: pem($line-spacing * -1);
    }

    &.is--active::before {
      transform: translateY($line-spacing) rotate(45deg);
    }

    &::after {
      top: pem($line-spacing - $line-thickness);
    }

    &.is--active::after {
      transform: translateY(pem($line-spacing * -1)) rotate(-45deg);
    }
  }
}
