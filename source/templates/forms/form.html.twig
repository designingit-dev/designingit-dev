
{% set action = 'sprout-forms/entries/save-entry' %}
{%- set renderingOptions = renderingOptions is defined and renderingOptions is not empty ? renderingOptions : {} %}
{%- set errors      = entry.getErrors()|length ? entry.getErrors() : false %}
{%- set errorClass  = renderingOptions.errorClass is defined ? renderingOptions.errorClass : 'errors' %}
{%- set id          = renderingOptions.id is defined ? renderingOptions.id : form.handle ~ '-form' %}
{%- set class       = renderingOptions.class is defined ? renderingOptions.class : form.handle ~ '-form' -%}
{%- set redirectUri = form.redirectUri -%}

<form method="post" accept-charset="utf-8" enctype="multipart/form-data"
  {%- if id %} id="{{ id }}"{% endif -%}
  {%- if class %} class="{{ class -}}{%- if errors %} {{ errorClass }}{% endif -%}"{% endif -%}
  >
  {{ craft.blitz.csrfInput() }}
  <input type="hidden" name="action" value="{{ action }}">
  <input type="hidden" name="handle" value="{{ form.handle }}">
  {%- if redirectUri is not empty %}
    {% if redirectUri|slice(0, 1)|lower == '?' %}
      {%- set redirectUri = craft.request.getUrl()~redirectUri %}
    {% endif %}

    <input type="hidden" aria-hidden="true" name="redirect"
           value="{{ redirectUri|hash }}">
  {% endif %}

  {#{% if body is defined and body is not null %}#}
    {#{{ body | raw }}#}
  {#{% endif %}#}

  <div class="fields">
    {%- for tab in form.getFieldLayout().getTabs() %}
      {{ craft.sproutForms.displayTab(form, tab.id, renderingOptions) }}
    {% endfor -%}
  </div>

  {% hook 'sproutForms.modifyForm' %}

  <div class="submit">
    <button type="submit">{{ form.submitButtonText is not empty ? form.submitButtonText : 'Submit'|t('sprout-forms') }}</button>
  </div>
</form>

{# Add focus to the first field which has an error #}
{% if errors -%}
  {%- for labelId, error in errors %}
    {%- if loop.first %}
      <script>
          (function() {
              var field = document.getElementById('fields-' + '{{ labelId }}');
              if (field) {
                  field.focus();
              }
          })();
      </script>
    {%- endif %}
  {%- endfor %}
{%- endif %}

<script>

    (function() {

        var SproutForms = SproutForms || {};
        SproutForms.CheckableInputs = SproutForms.CheckableInputs || {};

        // Manage aria-checked values on Checkbox and Radio Button inputs
        SproutForms.CheckableInputs = {

            formId: null,
            form: null,
            checkableInputs: null,

            init: function(id) {
                this.formId = id;
                this.form = document.getElementById(this.formId);
                this.checkableInputs = this.form.querySelectorAll('[type=checkbox], [type=radio]');

                this.setAriaCheckedAttributes();
                this.addCheckableInputsEventListeners();
            },

            setAriaCheckedAttributes: function() {
                for (var i = 0; i < this.checkableInputs.length; i += 1) {
                    if (this.checkableInputs[i].checked) {
                        this.checkableInputs[i].setAttribute("aria-checked", true);
                    }
                }
            },

            addCheckableInputsEventListeners: function() {
                for (var i = 0; i < this.checkableInputs.length; i += 1) {
                    this.checkableInputs[i].addEventListener("click", function(event) {
                        this.onCheckableInputChange(event);
                    }.bind(this), false);
                }
            },

            onCheckableInputChange: function(event) {

                if (event.target.checked) {

                    // Resets all buttons in radio group to false
                    if (event.target.getAttribute("type") === "radio") {
                        this.resetRadioGroup(event.target);
                    }

                    event.target.setAttribute("aria-checked", true);
                }
                else {
                    event.target.setAttribute("aria-checked", false);
                }
            },

            resetRadioGroup: function(selectedRadioInput) {

                var radioInputName = selectedRadioInput.getAttribute("name");

                console.log(radioInputName);
                var allRadioInputs = document.querySelectorAll('#' + this.formId + ' [name="' + radioInputName + '"] ');
                console.log(allRadioInputs);
                for (var i = 0; i < allRadioInputs.length; i += 1) {
                    allRadioInputs[i].setAttribute("aria-checked", false);
                }
            }

        };

        SproutForms.CheckableInputs.init('{{ id }}');

    })();

</script>
